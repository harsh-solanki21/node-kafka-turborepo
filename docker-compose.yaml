version: "3.9"

services:
  product:
    build:
      context: .
      dockerfile: apps/product/Dockerfile
    container_name: product-service
    ports:
      - "5001:5001"
    networks:
      - kafka-turbo
    environment:
      - PORT=5001
      - MONGODB_URI=mongodb://mongodb:27017/productdb
      - KAFKA_BROKERS=localhost:9092
    depends_on:
      - mongodb
      - kafka

  order:
    build:
      context: .
      dockerfile: apps/order/Dockerfile
    container_name: order-service
    ports:
      - "5002:5002"
    networks:
      - kafka-turbo
    environment:
      - PORT=5002
      - MONGODB_URI=mongodb://mongodb:27017/orderdb
      - KAFKA_BROKERS=localhost:9092
    depends_on:
      - mongodb
      - kafka

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - kafka-turbo

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - kafka-turbo

volumes:
  mongodb_data:

networks:
  kafka-turbo:
    driver: bridge
